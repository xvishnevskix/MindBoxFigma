import React, {useRef} from 'react';
import styles from './Search.module.scss';

const Search:React.FC= () => {
    const [value, setValue] = React.useState('')
    const searchRef = useRef<HTMLInputElement>(null)

    const onClickClear = () => {
        setValue('')
        searchRef.current?.focus()
    }

    const onChangeSearch = ((event: React.ChangeEvent<HTMLInputElement>) => {
        setValue(event.target.value)
        updateInput(event.target.value)
    })

    const updateInput = React.useCallback((event: string) => {
       // setSearchValue(event)
    }, [])


    return (
        <>
            <div className={styles.container}>
               <div className={styles.icon}>
                   <svg
                       width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                       <g clip-path="url(#clip0_3_8766)">
                           <path fill-rule="evenodd" clip-rule="evenodd" d="M15.2641 14.2379L17.7871 16.761C18.071 17.0448 18.071 17.5035 17.7872 17.7873C17.6456 17.9289 17.4598 18 17.274 18C17.0881 18 16.9023 17.9289 16.7608 17.7873L14.2378 15.2643L15.2641 14.2379ZM14.311 13.1555C15.2361 11.9815 15.7909 10.503 15.7909 8.89555C15.7909 5.09357 12.6974 2 8.89544 2C5.0935 2 2 5.09353 2 8.89552C2 12.6975 5.09353 15.7911 8.89547 15.7911C10.4143 15.7911 11.8181 15.2957 12.9586 14.4606L12.9576 14.4597C12.9576 14.4597 13.4889 14.0253 13.7818 13.7324C14.0522 13.462 14.278 13.1949 14.311 13.1555ZM3.45169 8.89552C3.45169 11.8976 5.89339 14.3394 8.89547 14.3394C11.8975 14.3394 14.3393 11.8976 14.3393 8.89552C14.3393 5.89341 11.8975 3.45167 8.89547 3.45167C5.89339 3.45167 3.45169 5.89341 3.45169 8.89552Z" fill="#616F82"/>
                       </g>
                       <defs>
                           <clipPath id="clip0_3_8766">
                               <rect width="16" height="16" fill="white" transform="translate(2 2)"/>
                           </clipPath>
                       </defs>
                   </svg>
               </div>

                <input
                    ref={searchRef}
                    value={value}
                    onChange={onChangeSearch}
                    >
                </input>
                {value
                    ? (<> <button onClick={() => onClickClear()} className={styles.buttons}><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M9.92654 8.51531L13.4821 4.95977C13.8624 4.57948 14.4789 4.57948 14.8592 4.95977C15.2395 5.34006 15.2395 5.95663 14.8592 6.33692L11.3037 9.89245L14.8389 13.4277C15.2343 13.8231 15.2343 14.4642 14.8389 14.8596C14.4435 15.255 13.8025 15.255 13.4071 14.8596L9.87181 11.3243L6.33687 14.8593C5.95659 15.2396 5.34002 15.2396 4.95973 14.8593C4.57944 14.479 4.57944 13.8624 4.95973 13.4821L8.49466 9.94718L4.93945 6.39196C4.54404 5.99656 4.54405 5.35549 4.93945 4.96009C5.33485 4.56469 5.97592 4.56469 6.37132 4.96009L9.92654 8.51531Z" fill="#616F82"/>
                    </svg>
                    </button> </>)
                    : (<><button className={styles.buttons}>
                    <svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M7.66455 3.5C7.25034 3.5 6.91455 3.83579 6.91455 4.25C6.91455 4.66421 7.25034 5 7.66455 5H16.1646C16.5788 5 16.9146 4.66421 16.9146 4.25C16.9146 3.83579 16.5788 3.5 16.1646 3.5H7.66455ZM9.66455 8.95321C9.25034 8.95321 8.91455 9.289 8.91455 9.70321C8.91455 10.1174 9.25034 10.4532 9.66455 10.4532H16.1646C16.5788 10.4532 16.9146 10.1174 16.9146 9.70321C16.9146 9.289 16.5788 8.95321 16.1646 8.95321H9.66455ZM10.9146 15.25C10.9146 14.8358 11.2503 14.5 11.6646 14.5H16.1646C16.5788 14.5 16.9146 14.8358 16.9146 15.25C16.9146 15.6642 16.5788 16 16.1646 16H11.6646C11.2503 16 10.9146 15.6642 10.9146 15.25ZM5.89472 13.7356C6.03509 13.8625 6.03509 14.0666 5.89472 14.1892L3.74817 16.0335C3.61286 16.1604 3.38714 16.1604 3.25151 16.0335L1.10528 14.1892C0.964908 14.0668 0.964908 13.8625 1.10528 13.7356C1.24058 13.613 1.46662 13.613 1.60699 13.7356L3.14624 15.0355L3.14371 4.12582C3.14371 3.9489 3.30431 3.80829 3.5 3.80829C3.69569 3.80829 3.85123 3.9489 3.85155 4.12582L3.85408 15.0355L5.39807 13.7356C5.53338 13.613 5.7591 13.613 5.89472 13.7356Z" fill="#616F82"/>
                        <path d="M5.89472 14.1892L6.05765 14.3788L6.05919 14.3775L5.89472 14.1892ZM5.89472 13.7356L6.06238 13.5501H6.06238L5.89472 13.7356ZM3.74817 16.0335L3.58509 15.8437L3.57715 15.8511L3.74817 16.0335ZM3.25151 16.0335L3.42247 15.8508L3.41445 15.8439L3.25151 16.0335ZM1.10528 14.1892L0.941022 14.3776L0.942338 14.3788L1.10528 14.1892ZM1.10528 13.7356L1.27293 13.921L1.27314 13.9209L1.10528 13.7356ZM1.60699 13.7356L1.4425 13.9239L1.44569 13.9266L1.60699 13.7356ZM3.14624 15.0355L2.98494 15.2265L3.39636 15.5739L3.39624 15.0354L3.14624 15.0355ZM3.14371 4.12582H2.89371V4.12588L3.14371 4.12582ZM3.85155 4.12582L4.10155 4.12576L4.10155 4.12537L3.85155 4.12582ZM3.85408 15.0355L3.60408 15.0355L3.6042 15.5726L4.01509 15.2267L3.85408 15.0355ZM5.39807 13.7356L5.55918 13.927L5.56594 13.9209L5.39807 13.7356ZM7.16455 4.25C7.16455 3.97386 7.38841 3.75 7.66455 3.75V3.25C7.11227 3.25 6.66455 3.69772 6.66455 4.25H7.16455ZM7.66455 4.75C7.38841 4.75 7.16455 4.52614 7.16455 4.25H6.66455C6.66455 4.80228 7.11227 5.25 7.66455 5.25V4.75ZM16.1646 4.75H7.66455V5.25H16.1646V4.75ZM16.6646 4.25C16.6646 4.52614 16.4407 4.75 16.1646 4.75V5.25C16.7168 5.25 17.1646 4.80228 17.1646 4.25H16.6646ZM16.1646 3.75C16.4407 3.75 16.6646 3.97386 16.6646 4.25H17.1646C17.1646 3.69772 16.7168 3.25 16.1646 3.25V3.75ZM7.66455 3.75H16.1646V3.25H7.66455V3.75ZM9.16455 9.70321C9.16455 9.42707 9.38841 9.20321 9.66455 9.20321V8.70321C9.11227 8.70321 8.66455 9.15093 8.66455 9.70321H9.16455ZM9.66455 10.2032C9.38841 10.2032 9.16455 9.97935 9.16455 9.70321H8.66455C8.66455 10.2555 9.11227 10.7032 9.66455 10.7032V10.2032ZM16.1646 10.2032H9.66455V10.7032H16.1646V10.2032ZM16.6646 9.70321C16.6646 9.97935 16.4407 10.2032 16.1646 10.2032V10.7032C16.7168 10.7032 17.1646 10.2555 17.1646 9.70321H16.6646ZM16.1646 9.20321C16.4407 9.20321 16.6646 9.42707 16.6646 9.70321H17.1646C17.1646 9.15093 16.7168 8.70321 16.1646 8.70321V9.20321ZM9.66455 9.20321H16.1646V8.70321H9.66455V9.20321ZM11.6646 14.25C11.1123 14.25 10.6646 14.6977 10.6646 15.25H11.1646C11.1646 14.9739 11.3884 14.75 11.6646 14.75V14.25ZM16.1646 14.25H11.6646V14.75H16.1646V14.25ZM17.1646 15.25C17.1646 14.6977 16.7168 14.25 16.1646 14.25V14.75C16.4407 14.75 16.6646 14.9739 16.6646 15.25H17.1646ZM16.1646 16.25C16.7168 16.25 17.1646 15.8023 17.1646 15.25H16.6646C16.6646 15.5261 16.4407 15.75 16.1646 15.75V16.25ZM11.6646 16.25H16.1646V15.75H11.6646V16.25ZM10.6646 15.25C10.6646 15.8023 11.1123 16.25 11.6646 16.25V15.75C11.3884 15.75 11.1646 15.5261 11.1646 15.25H10.6646ZM6.05919 14.3775C6.31553 14.1535 6.31062 13.7746 6.06238 13.5501L5.72707 13.921C5.74644 13.9386 5.75 13.9546 5.75 13.964C5.75 13.9731 5.74682 13.9864 5.73026 14.0009L6.05919 14.3775ZM3.91109 16.2231L6.05765 14.3788L5.7318 13.9995L3.58525 15.8439L3.91109 16.2231ZM3.08071 16.2161C3.31233 16.4328 3.68759 16.4331 3.91919 16.2159L3.57715 15.8511C3.53813 15.8877 3.46194 15.888 3.42232 15.851L3.08071 16.2161ZM0.942338 14.3788L3.08858 16.2231L3.41445 15.8439L1.26821 13.9996L0.942338 14.3788ZM0.93762 13.5501C0.689516 13.7744 0.684269 14.1539 0.941026 14.3776L1.26952 14.0007C1.25322 13.9865 1.25 13.9733 1.25 13.9641C1.25 13.9546 1.25362 13.9385 1.27293 13.921L0.93762 13.5501ZM1.77146 13.5473C1.53866 13.344 1.16969 13.3399 0.937405 13.5503L1.27314 13.9209C1.31148 13.8861 1.39459 13.882 1.44253 13.9239L1.77146 13.5473ZM3.30754 14.8445L1.76829 13.5446L1.44569 13.9266L2.98494 15.2265L3.30754 14.8445ZM2.89371 4.12588L2.89624 15.0355L3.39624 15.0354L3.39371 4.12576L2.89371 4.12588ZM3.5 3.55829C3.19544 3.55829 2.89371 3.78334 2.89371 4.12582H3.39371C3.39371 4.11653 3.39722 4.10293 3.4143 4.0878C3.43206 4.07206 3.46175 4.05829 3.5 4.05829V3.55829ZM4.10155 4.12537C4.10095 3.78771 3.80957 3.55829 3.5 3.55829V4.05829C3.53784 4.05829 3.56541 4.07173 3.58144 4.08621C3.59689 4.10017 3.60153 4.11409 3.60155 4.12626L4.10155 4.12537ZM4.10408 15.0354L4.10155 4.12576L3.60155 4.12588L3.60408 15.0355L4.10408 15.0354ZM5.23706 13.5444L3.69307 14.8442L4.01509 15.2267L5.55908 13.9268L5.23706 13.5444ZM6.06238 13.5501C5.83167 13.3416 5.46088 13.3413 5.2302 13.5503L5.56594 13.9209C5.60587 13.8847 5.68654 13.8844 5.72707 13.921L6.06238 13.5501Z" fill="#616F82"/>
                    </svg>
                </button>
                    <button className={styles.buttons}>
                        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M7.99792 6.04032H13.0262C13.564 6.04032 14 6.4763 14 7.01411C14 7.55192 13.564 7.9879 13.0262 7.9879H7.99792V12.9875C7.99792 13.5467 7.54461 14 6.98543 14C6.42625 14 5.97294 13.5467 5.97294 12.9875V7.9879H0.97379C0.435981 7.9879 0 7.55192 0 7.01411C0 6.4763 0.435981 6.04032 0.973791 6.04032H5.97294V1.01249C5.97294 0.453305 6.42625 0 6.98543 0C7.54461 0 7.99792 0.453306 7.99792 1.01249V6.04032Z" fill="#616F82"/>
                        </svg>
                    </button></>)}
            </div>


        </>
    );
};

export default Search;